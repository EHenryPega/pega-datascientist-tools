% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adm2pmml.R
\name{adm2pmml}
\alias{adm2pmml}
\title{Generates PMML files from ADM models.}
\usage{
adm2pmml(dmModels = NULL, dmPredictors = NULL, dbConn = NULL,
  forceUseDM = FALSE, appliesToFilter = NULL, ruleNameFilter = NULL,
  destDir = ".", tmpDir = NULL, verbose = (!is.null(tmpDir)))
}
\arguments{
\item{dmModels}{Data frame (or anything else that converts to
\code{data.table}) with the ADM datamart model data}

\item{dmPredictors}{Data frame (or anything else that converts to
\code{data.table}) with the ADM datamart predictor data. Required if
\code{dmModels} is given. If \code{dmPredictors} is given but
\code{dmModels} is not, the assumption will be made that all the predictor
binning belongs to a single model.}

\item{dbConn}{Database connection. If given, the data will be extracted from
the internal ADM Factory table unless the \code{forceUseDM} flag is set.}

\item{forceUseDM}{Only in combination with the \code{dbConn} flag. If TRUE,
will use the ADM datamart tables. If FALSE (the default) will use the ADM
Factory tables.}

\item{appliesToFilter}{Optional filter for the applies to class of the models
as a regexp passed on to \code{\link[base:grep]{grepl}} with \code{ignore.case =
TRUE}, \code{perl = TRUE}, \code{fixed = FALSE}, \code{useBytes = FALSE}.}

\item{ruleNameFilter}{Optional filter for the rule name of the models as a
regexp passed on to \code{\link[base:grep]{grepl}} with \code{ignore.case =
TRUE}, \code{perl = TRUE}, \code{fixed = FALSE}, \code{useBytes = FALSE}.}

\item{destDir}{Directory to create the PMML files in. Defaults to the current
directory.}

\item{tmpDir}{Directory for temporary files. Defaults to \code{NULL}
indicating no temp files will be left behind.}

\item{verbose}{Whether to print the steps it's performing. Defaults to
\code{TRUE} if the \code{tmpDir} is set.}
}
\value{
Creates the PMML file(s) in the given destination and returns a list
  of model ID's per file.
}
\description{
Generates PMML files from the ADM models in either the ADM data mart,
directly from the database or from dataset exports, or from the (internal)
"Factory" tables. The generated PMML contains all the individual models for
each model partition inside a big ensemble that selects between them based on
context keys.
}
\section{Exporting a specific version}{
 When exporting from the datamart, only
  the models from the most recent model snapshot will be exported, and for
  each of these, only the most recent of the predictor snapshots of that
  model will be used. To export specific snapshots subset the data before
  calling this method.
}

\examples{
adm2pmml(verbose=TRUE)
\dontrun{
  models <- readDSExport("Data-Decision-ADM-ModelSnapshot_AllModelSnapshots","~/Downloads")
  preds <- readDSExport("Data-Decision-ADM-PredictorBinningSnapshot_AllPredictorSnapshots","~/Downloads")

  adm2pmml(models, preds, verbose=TRUE)
}
}
