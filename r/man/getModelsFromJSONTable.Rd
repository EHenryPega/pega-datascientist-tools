% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exportUtilsJSON.R
\name{getModelsFromJSONTable}
\alias{getModelsFromJSONTable}
\title{Retrieves ADM models from the internal "Factory" table.}
\usage{
getModelsFromJSONTable(
  conn,
  appliesto = NULL,
  configurationname = NULL,
  verbose = F
)
}
\arguments{
\item{conn}{Connection to the database}

\item{appliesto}{Optional filter on the \code{AppliesTo} class. Currently
only filters using exact string match, not a regexp.}

\item{configurationname}{Optional filter on the ADM rule name. Currently only
filters using exact string match, not a regexp.}

\item{verbose}{Set to \code{True} to show database queries.}
}
\value{
Returns a \code{data.table} with all the models. When inspecting
  this, be careful with the \code{pyfactory} column as this contains a
  possibly very large string with the model JSON data. You would typically
  want to exclude this when looking at an overview of all models. A single
  model instance from the table can be further inspected by calling the
  \code{fromJSON} function on the relevant \code{pyfactory} value.
}
\description{
The models in the internal "Factory" table contain all the raw data that the
system needs to build the models from. It includes the raw binning, the
current data analysis, the score mapping and much more. The data can be used
to reconstruct the models from, similar to the ADM datamart data. The model
data here is however complete as it is all stored in JSOn while the datamart
may contain truncated values.
}
\examples{
\dontrun{models <- getModelsFromJSONTable(conn)
myModel <- fromJSON(models$pyfactory[1])}
}
